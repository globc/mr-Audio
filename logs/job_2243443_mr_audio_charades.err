WARNING:__main__:
*****************************************
Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
*****************************************
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:19: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_fwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:19: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_fwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:19: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_fwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:30: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_bwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:30: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_bwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:30: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_bwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:19: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_fwd(orig_func)  # type: ignore
/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/fairscale/experimental/nn/offload.py:30: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  return torch.cuda.amp.custom_bwd(orig_func)  # type: ignore
[rank3]:[W1215 22:30:34.302353716 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 3]  using GPU 3 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank1]:[W1215 22:30:34.322238125 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 1]  using GPU 1 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank0]:[W1215 22:30:34.323692513 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank2]:[W1215 22:30:37.348634146 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 2]  using GPU 2 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: joeltschesche (joeltschesche-tu-darmstadt). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.19.1
wandb: Run data is saved locally in /home/atuin/g102ea/g102ea22/mr-Audio/wandb/run-20241215_223039-bphiwtek
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run Charades_20
wandb: ‚≠êÔ∏è View project at https://wandb.ai/joeltschesche-tu-darmstadt/mr_BLIP
wandb: üöÄ View run at https://wandb.ai/joeltschesche-tu-darmstadt/mr_BLIP/runs/bphiwtek
2024-12-15 22:30:40,053 [INFO] 
=====  Running Parameters    =====
2024-12-15 22:30:40,054 [INFO] {
    "accum_grad_iters": 1,
    "amp": true,
    "batch_size_eval": 4,
    "batch_size_train": 4,
    "device": "cuda",
    "dist_backend": "nccl",
    "dist_url": "env://",
    "distributed": true,
    "evaluate": false,
    "find_unused_parameters": true,
    "gpu": 0,
    "init_lr": 0.0003,
    "lr_sched": "linear_warmup_cosine_lr",
    "max_epoch": 50,
    "max_len": 200,
    "min_len": 8,
    "min_lr": 0,
    "num_beams": 5,
    "num_workers": 8,
    "output_dir": "result/mr_BLIP/Charades/Charades_20-4",
    "rank": 0,
    "resume_ckpt_path": null,
    "seed": 42,
    "task": "moment_retrieval",
    "test_splits": [
        "test"
    ],
    "train_splits": [
        "train"
    ],
    "valid_splits": [
        "val"
    ],
    "wandb": true,
    "wandb_name": "Charades_20",
    "wandb_project": "mr_BLIP",
    "warmup_lr": 1e-08,
    "warmup_steps": 1745,
    "weight_decay": 0.05,
    "world_size": 4
}
2024-12-15 22:30:40,054 [INFO] 
======  Dataset Attributes  ======
2024-12-15 22:30:40,054 [INFO] 
======== charades_sta =======
2024-12-15 22:30:40,054 [INFO] {
    "build_info": {
        "annotations": {
            "test": {
                "storage": "/home/atuin/g102ea/shared/charades_sta_annotations/test.json",
                "url": "/home/atuin/g102ea/shared/charades_sta_annotations/test.json"
            },
            "train": {
                "storage": "/home/atuin/g102ea/shared/charades_sta_annotations/train.json",
                "url": "/home/atuin/g102ea/shared/charades_sta_annotations/train.json"
            },
            "val": {
                "storage": "/home/atuin/g102ea/shared/charades_sta_annotations/test.json",
                "url": "/home/atuin/g102ea/shared/charades_sta_annotations/test.json"
            }
        },
        "videos": {
            "storage": "/home/atuin/g102ea/shared/videos/Charades_v1"
        }
    },
    "data_type": "videos",
    "text_processor": {
        "eval": {
            "max_words": 50,
            "name": "blip_question"
        },
        "train": {
            "max_words": 50,
            "name": "blip_question"
        }
    },
    "vis_processor": {
        "eval": {
            "image_size": 224,
            "n_frms": 20,
            "name": "blip_video_eval"
        },
        "train": {
            "image_size": 224,
            "n_frms": 20,
            "name": "blip2_video_train"
        }
    }
}
2024-12-15 22:30:40,054 [INFO] 
======  Model Attributes  ======
2024-12-15 22:30:40,055 [INFO] {
    "arch": "blip2_mr",
    "drop_path_rate": 0,
    "finetuned": "",
    "frame_token_aggregation": false,
    "freeze_vit": true,
    "image_size": 224,
    "input_time_format": "seconds_integers",
    "interleave_data": true,
    "load_finetuned": false,
    "model_type": "pretrain_flant5xl",
    "num_query_token": 32,
    "pretrained": "https://storage.googleapis.com/sfr-vision-language-research/LAVIS/models/BLIP2/blip2_pretrained_flant5xl.pth",
    "prompt": "",
    "t5_model": "google/flan-t5-xl",
    "task": "qformer_freeze_lora",
    "use_grad_checkpoint": false,
    "vit_precision": "fp16"
}
2024-12-15 22:30:40,056 [INFO] Using existing file /home/atuin/g102ea/shared/charades_sta_annotations/train.json.
2024-12-15 22:30:40,056 [INFO] Using existing file /home/atuin/g102ea/shared/charades_sta_annotations/test.json.
2024-12-15 22:30:40,056 [INFO] Using existing file /home/atuin/g102ea/shared/charades_sta_annotations/test.json.
2024-12-15 22:30:40,057 [INFO] Building datasets...
2024-12-15 22:30:54,503 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/eva_vit.py:433: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(cached_file, map_location="cpu")

2024-12-15 22:30:54,503 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/eva_vit.py:433: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(cached_file, map_location="cpu")

2024-12-15 22:30:54,503 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/eva_vit.py:433: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(cached_file, map_location="cpu")

2024-12-15 22:30:54,503 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/eva_vit.py:433: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state_dict = torch.load(cached_file, map_location="cpu")

2024-12-15 22:30:57,516 [INFO] freeze vision encoder
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 1/2 [00:00<00:00,  2.13it/s]Loading checkpoint shards:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 1/2 [00:00<00:00,  1.82it/s]Loading checkpoint shards:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 1/2 [00:00<00:00,  2.81it/s]Loading checkpoint shards:  50%|‚ñà‚ñà‚ñà‚ñà‚ñà     | 1/2 [00:00<00:00,  2.91it/s]Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  2.95it/s]Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  2.78it/s]
Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  2.65it/s]Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  2.48it/s]
Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  3.68it/s]Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  3.52it/s]
Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  3.58it/s]Loading checkpoint shards: 100%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 2/2 [00:00<00:00,  3.46it/s]
2024-12-15 22:31:24,596 [INFO] Annoying numbers and their replacement: {112: 113, 128: 129, 135: 136, 161: 160, 162: 164, 163: 164, 170: 169, 171: 172, 173: 174, 175: 176, 181: 180, 182: 183, 191: 192, 193: 192, 194: 195}
2024-12-15 22:31:26,882 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_models/blip2.py:80: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(cached_file, map_location="cpu")

2024-12-15 22:31:26,882 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_models/blip2.py:80: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(cached_file, map_location="cpu")

2024-12-15 22:31:26,882 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_models/blip2.py:80: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(cached_file, map_location="cpu")

2024-12-15 22:31:26,882 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_models/blip2.py:80: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(cached_file, map_location="cpu")

2024-12-15 22:31:27,465 [INFO] load checkpoint from https://storage.googleapis.com/sfr-vision-language-research/LAVIS/models/BLIP2/blip2_pretrained_flant5xl.pth
2024-12-15 22:31:27,466 [INFO] load pretrained weights from https://storage.googleapis.com/sfr-vision-language-research/LAVIS/models/BLIP2/blip2_pretrained_flant5xl.pth
2024-12-15 22:31:27,838 [INFO] Start training
2024-12-15 22:31:28,165 [INFO] dataset_ratios not specified, datasets will be concatenated (map-style datasets) or chained (webdataset.DataPipeline).
2024-12-15 22:31:28,165 [INFO] Loaded 12408 records for train split from the dataset.
2024-12-15 22:31:28,165 [INFO] Loaded 3720 records for val split from the dataset.
2024-12-15 22:31:28,166 [INFO] Loaded 3720 records for test split from the dataset.
2024-12-15 22:31:28,205 [INFO] number of trainable parameters: 22825984
2024-12-15 22:31:28,207 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py:147: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()

2024-12-15 22:31:28,208 [INFO] Start training epoch 0, 775 iters per inner epoch.
2024-12-15 22:31:28,208 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py:147: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()

2024-12-15 22:31:28,209 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py:147: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()

2024-12-15 22:31:28,209 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py:147: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self._scaler = torch.cuda.amp.GradScaler()

2024-12-15 22:31:45,338 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py:241: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=use_amp):

[rank2]: Traceback (most recent call last):
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 154, in <module>
[rank2]:     main()
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 150, in main
[rank2]:     runner.train()
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 386, in train
[rank2]:     train_stats = self.train_epoch(cur_epoch)
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 445, in train_epoch
[rank2]:     return self.task.train_epoch(
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 116, in train_epoch
[rank2]:     return self._train_inner_loop(
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py", line 242, in _train_inner_loop
[rank2]:     loss = self.train_step(model=model, samples=samples)
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 67, in train_step
[rank2]:     loss = model(samples)["loss"]
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
[rank2]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
[rank2]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_mr_models/blip2_mr.py", line 307, in forward
[rank2]:     audio_embeddings = self.audio_embeddings_model.get_audio_embeddings(audio_clips=audio_clips, sr=48000).to(self.eigendevice)
[rank2]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/audioinclusion/AudioEmbeddingsCLAP.py", line 33, in get_audio_embeddings
[rank2]:     audio_inputs = self.processor(audios=audio_clips, sampling_rate=sr, return_tensors="pt", padding=True)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/processing_clap.py", line 87, in __call__
[rank2]:     audio_features = self.feature_extractor(
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/feature_extraction_clap.py", line 325, in __call__
[rank2]:     raw_speech = np.asarray(raw_speech, dtype=np.float64)
[rank2]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/_tensor.py", line 1151, in __array__
[rank2]:     return self.numpy().astype(dtype, copy=False)
[rank2]: TypeError: can't convert cuda:2 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
2024-12-15 22:31:47,599 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py:241: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=use_amp):

[rank3]: Traceback (most recent call last):
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 154, in <module>
[rank3]:     main()
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 150, in main
[rank3]:     runner.train()
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 386, in train
[rank3]:     train_stats = self.train_epoch(cur_epoch)
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 445, in train_epoch
[rank3]:     return self.task.train_epoch(
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 116, in train_epoch
[rank3]:     return self._train_inner_loop(
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py", line 242, in _train_inner_loop
[rank3]:     loss = self.train_step(model=model, samples=samples)
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 67, in train_step
[rank3]:     loss = model(samples)["loss"]
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
[rank3]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
[rank3]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_mr_models/blip2_mr.py", line 307, in forward
[rank3]:     audio_embeddings = self.audio_embeddings_model.get_audio_embeddings(audio_clips=audio_clips, sr=48000).to(self.eigendevice)
[rank3]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/audioinclusion/AudioEmbeddingsCLAP.py", line 33, in get_audio_embeddings
[rank3]:     audio_inputs = self.processor(audios=audio_clips, sampling_rate=sr, return_tensors="pt", padding=True)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/processing_clap.py", line 87, in __call__
[rank3]:     audio_features = self.feature_extractor(
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/feature_extraction_clap.py", line 325, in __call__
[rank3]:     raw_speech = np.asarray(raw_speech, dtype=np.float64)
[rank3]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/_tensor.py", line 1151, in __array__
[rank3]:     return self.numpy().astype(dtype, copy=False)
[rank3]: TypeError: can't convert cuda:3 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
2024-12-15 22:31:49,156 [WARNING] /home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py:241: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=use_amp):

Traceback (most recent call last):
  File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 154, in <module>
    main()
  File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 150, in main
    runner.train()
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 386, in train
    train_stats = self.train_epoch(cur_epoch)
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 445, in train_epoch
    return self.task.train_epoch(
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 116, in train_epoch
    return self._train_inner_loop(
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py", line 242, in _train_inner_loop
    loss = self.train_step(model=model, samples=samples)
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 67, in train_step
    loss = model(samples)["loss"]
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_mr_models/blip2_mr.py", line 307, in forward
    audio_embeddings = self.audio_embeddings_model.get_audio_embeddings(audio_clips=audio_clips, sr=48000).to(self.eigendevice)
  File "/home/atuin/g102ea/g102ea22/mr-Audio/audioinclusion/AudioEmbeddingsCLAP.py", line 33, in get_audio_embeddings
    audio_inputs = self.processor(audios=audio_clips, sampling_rate=sr, return_tensors="pt", padding=True)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/processing_clap.py", line 87, in __call__
    audio_features = self.feature_extractor(
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/feature_extraction_clap.py", line 325, in __call__
    raw_speech = np.asarray(raw_speech, dtype=np.float64)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/_tensor.py", line 1151, in __array__
    return self.numpy().astype(dtype, copy=False)
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
[rank0]: Traceback (most recent call last):
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 154, in <module>
[rank0]:     main()
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/train.py", line 150, in main
[rank0]:     runner.train()
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 386, in train
[rank0]:     train_stats = self.train_epoch(cur_epoch)
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/runners/runner_base.py", line 445, in train_epoch
[rank0]:     return self.task.train_epoch(
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 116, in train_epoch
[rank0]:     return self._train_inner_loop(
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/moment_retrieval.py", line 242, in _train_inner_loop
[rank0]:     loss = self.train_step(model=model, samples=samples)
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/tasks/base_task.py", line 67, in train_step
[rank0]:     loss = model(samples)["loss"]
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
[rank0]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
[rank0]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/lavis/models/blip2_mr_models/blip2_mr.py", line 307, in forward
[rank0]:     audio_embeddings = self.audio_embeddings_model.get_audio_embeddings(audio_clips=audio_clips, sr=48000).to(self.eigendevice)
[rank0]:   File "/home/atuin/g102ea/g102ea22/mr-Audio/audioinclusion/AudioEmbeddingsCLAP.py", line 33, in get_audio_embeddings
[rank0]:     audio_inputs = self.processor(audios=audio_clips, sampling_rate=sr, return_tensors="pt", padding=True)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/processing_clap.py", line 87, in __call__
[rank0]:     audio_features = self.feature_extractor(
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/transformers/models/clap/feature_extraction_clap.py", line 325, in __call__
[rank0]:     raw_speech = np.asarray(raw_speech, dtype=np.float64)
[rank0]:   File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/_tensor.py", line 1151, in __array__
[rank0]:     return self.numpy().astype(dtype, copy=False)
[rank0]: TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
W1215 22:31:49.848350 2492077 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2492146 closing signal SIGTERM
W1215 22:31:49.851193 2492077 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2492147 closing signal SIGTERM
W1215 22:31:49.856173 2492077 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2492150 closing signal SIGTERM
E1215 22:31:50.530993 2492077 torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: 1) local_rank: 2 (pid: 2492148) of binary: /home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/bin/python
Traceback (most recent call last):
  File "/apps/python/3.9-anaconda/lib/python3.9/runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/apps/python/3.9-anaconda/lib/python3.9/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/run.py", line 923, in <module>
    main()
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 355, in wrapper
    return f(*args, **kwargs)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/run.py", line 919, in main
    run(args)
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/run.py", line 910, in run
    elastic_launch(
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 138, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/home/atuin/g102ea/g102ea22/venvs/mrBlipAudio/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 269, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
train.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-12-15_22:31:49
  host      : a0604.nhr.fau.de
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 2492148)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
